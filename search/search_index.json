{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Computa\u00e7\u00e3o em Nuvem","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#kit-q","title":"KIT-Q","text":"<p>Ian Faray </p> <p>Vitor Tanaka</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 - Data 17/03/2025</li> <li> Roteiro 2</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"roteiro1/main/","title":"Roteiro 1 - Computa\u00e7\u00e3o em Nuvem","text":"<p>Membros: Ian Faray e Vitor Tanaka</p>"},{"location":"roteiro1/main/#objetivo","title":"Objetivo","text":"<p>Este roteiro tem como objetivo demonstrar o processo de cria\u00e7\u00e3o de uma infraestrutura de Nuvem Bare-metal, em que introduziram-se conceitos b\u00e1sicos sobre gerenciamento de hardware e rede de computadores. Utilizamos um ambiente composto por cinco m\u00e1quinas, onde implementamos:</p> <ul> <li> <p>Um servidor PostgreSQL para gerenciamento de banco de dados.</p> </li> <li> <p>Duas inst\u00e2ncias de uma aplica\u00e7\u00e3o Django, distribu\u00eddas em servidores distintos.</p> </li> <li> <p>Um servidor Nginx configurado como balanceador de carga, distribuindo as requisi\u00e7\u00f5es entre as aplica\u00e7\u00f5es Django.</p> </li> </ul>"},{"location":"roteiro1/main/#montagem-do-roteiro","title":"Montagem do Roteiro","text":""},{"location":"roteiro1/main/#infraestrutura","title":"Infraestrutura","text":"<p>Inicialmente, criamos a infraestrutura de Nuvem Bare-metal:</p> <ul> <li> <p>Instalamos o Ubuntu Server 22.04 LTS na NUC principal, sendo nossa main, utilizando um pendrive boot\u00e1vel.</p> </li> <li> <p>Configuramos o MAAS para gerenciar as m\u00e1quinas, sendo acessado via autentica\u00e7\u00e3o SSH.</p> </li> <li> <p>Adicionamos as 5 m\u00e1quinas dispon\u00edveis (server1 a server5) ao MAAS, configurando-as para inicializa\u00e7\u00e3o via PXE.</p> </li> <li> <p>Criamos uma OVS Bridge para conectar as interfaces de rede, garantindo a comunica\u00e7\u00e3o entre as m\u00e1quinas.</p> </li> <li> <p>Realizamos um NAT para permitir o acesso externo a partir da rede Insper, conectando ao server main pela porta 22.</p> </li> </ul>"},{"location":"roteiro1/main/#aplicacao","title":"Aplica\u00e7\u00e3o","text":"<p>Primeiramente, realizamos o deploy do Ubuntu no server1 pelo MAAS, em que, em seguida, instalamos o PostgreSQL.</p>"},{"location":"roteiro1/main/#tarefa-1","title":"Tarefa 1","text":"<p> Tarefa 1.1 Print Funcionando e seu Status est\u00e1 como \"Ativo\" para o Sistema Operacional. </p> <p> Tarefa 1.2 Acessivel na pr\u00f3pria maquina na qual ele foi implantado. Tarefa 1.3 Acessivel a partir de uma conex\u00e3o vinda da m\u00e1quina MAIN</p> <p> Tarefa 1.4 Em qual porta este servi\u00e7o est\u00e1 funcionando</p>"},{"location":"roteiro1/main/#parte-ii-aplicacao-django","title":"Parte II: Aplica\u00e7\u00e3o Django","text":"<p>No segundo servidor, assim como no primeiro, realizamos o deploy do Ubuntu, por\u00e9m neste caso instalamos uma aplica\u00e7\u00e3o Django j\u00e1 desenvolvida.   </p>"},{"location":"roteiro1/main/#tarefa-2","title":"Tarefa 2","text":"<p> Tarefa 2.1 Dashboard do MAAS com as m\u00e1quinas</p> <p> Tarefa 2.2 aba images, com as imagens sincronizadas.</p> <p> Tarefa 2.3-1</p> <p> Tarefa 2.3-2</p> <p> Tarefa 2.3-3</p> <p> Tarefa 2.3-4</p> <p> Tarefa 2.3-5 Da Aba de cada maquina(5x) mostrando os testes de hardware e commissioning com Status \"OK</p>"},{"location":"roteiro1/main/#utilizando-o-ansible-deploy-automatizado-de-aplicacao","title":"Utilizando o Ansible - deploy automatizado de aplica\u00e7\u00e3o","text":""},{"location":"roteiro1/main/#tarefa-3","title":"Tarefa 3","text":"<p> Tarefa 3.1  print da tela do Dashboard do MAAS com as 2 Maquinas e seus respectivos IPs.</p> <p> Tarefa 3.2 print da aplicacao Django, provando que voce est\u00e1 conectado ao server</p> <p>tarefa 3.3:  A implementa\u00e7\u00e3o manual da aplica\u00e7\u00e3o Django e do banco de dados foi realizada com um script (install.sh) que automatiza a instala\u00e7\u00e3o de depend\u00eancias, a migra\u00e7\u00e3o do banco de dados e a cria\u00e7\u00e3o de um superusu\u00e1rio. O ambiente foi configurado instalando pacotes essenciais (python3-dev, libpq-dev, python3-pip) e instalando as bibliotecas necess\u00e1rias via pip. Em seguida, aplicamos as migra\u00e7\u00f5es do banco de dados com python3 manage.py migrate. Para garantir a inicializa\u00e7\u00e3o autom\u00e1tica, adicionamos um comando ao crontab que executa o script de inicializa\u00e7\u00e3o (run.sh) no reboot. O superusu\u00e1rio foi criado definindo vari\u00e1veis de ambiente e executando python3 manage.py createsuperuser --noinput. A aplica\u00e7\u00e3o roda na porta 8080 e pode ser acessada via http://[IP server2]:8080/admin/. Para permitir acesso externo, configuramos um t\u00fanel SSH redirecionando a porta 8080 do servidor remoto para a porta 8001 local.</p>"},{"location":"roteiro1/main/#ansible","title":"Ansible","text":"<p>Utilizamos o Ansible para fazermos deploy da aplica\u00e7\u00e3o Django. No nosso caso, escolhemos o server 4.</p>"},{"location":"roteiro1/main/#tarefa-4","title":"Tarefa 4","text":"<p> Tarefa 4.1 print da tela do Dashboard do MAAS com as 3 Maquinas e seus respectivos IPs.</p> <p> *Tarefa 4.2 print da aplicacao Django, provando que voce est\u00e1 conectado ao server2 *</p> <p> Tarefa 4.3 print da aplicacao Django, provando que voce est\u00e1 conectado ao server3(4) no nosso caso</p> <p>Tarefa 4.4:A instala\u00e7\u00e3o manual de uma aplica\u00e7\u00e3o Django \u00e9 demorada, propensa a erros e dif\u00edcil de replicar, exigindo a execu\u00e7\u00e3o manual de comandos em cada servidor, sem garantia de idempot\u00eancia. J\u00e1 com o Ansible, todo o processo \u00e9 automatizado atrav\u00e9s de playbooks, garantindo efici\u00eancia, repetibilidade e consist\u00eancia entre servidores. O Ansible permite gerenciar m\u00faltiplos servidores simultaneamente, evitar erros manuais e documentar todo o processo. No seu caso, o playbook tasks-install-playbook.yaml foi utilizado para instalar Django no server4, garantindo a instala\u00e7\u00e3o de depend\u00eancias, a configura\u00e7\u00e3o do banco de dados, a cria\u00e7\u00e3o do superusu\u00e1rio e a configura\u00e7\u00e3o da inicializa\u00e7\u00e3o autom\u00e1tica</p>"},{"location":"roteiro1/main/#tarefa-5","title":"Tarefa 5","text":"<p> Tarefa 5.1 print da tela do Dashboard do MAAS com as 4 Maquinas e seus respectivos IPs.</p> <p> Tarefa 5.2-1</p> <p> Tarefa 5.2-2prints das respostas de cada request, provando que voce est\u00e1 conectado ao server 4, que \u00e9 o Proxy Reverso e que ele bate cada vez em um server diferente server2 e server3 (no nosso caso, server4).</p>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<p>Apesar da pr\u00e1tica ter sido um sucesso, encontramos diversos obst\u00e1culos e dificuldades no processo at\u00e9 atingirmos o resultado final. O primeiro contato com o MAAS e a configura\u00e7\u00e3o da infraestrutura foi desafiador, sendo necess\u00e1rio pesquisar e consultar os professores e assistentes, que nos orientaram e auxiliaram para superar as dificuldades. Al\u00e9m disso, imprevistos ocorreram, at\u00e9 inesperados pelos professores, como por exemplo, as imagens do Ubuntu que instalamos no MAAS sofreram uma atualiza\u00e7\u00e3o e ficaram incompat\u00edveis com o firmware das m\u00e1quinas, o que nos obrigou a voltar alguns passos para continuar o roteiro. Apesar disso, esses incidentes s\u00e3o importantes para aprendermos a lidar com problemas reais e a buscar solu\u00e7\u00f5es em grupo, o que contribui para o nosso desenvolvimento profissional e conhecimento t\u00e9cnico.</p>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>A realiza\u00e7\u00e3o deste roteiro permitiu consolidar conhecimentos sobre redes, sub-redes e gerenciamento de infraestrutura em nuvem. Al\u00e9m disso, exploramos ferramentas como MAAS, Ansible e Nginx, que facilitam a implementa\u00e7\u00e3o e o gerenciamento de aplica\u00e7\u00f5es distribu\u00eddas. O balanceamento de carga e a alta disponibilidade foram alcan\u00e7ados com sucesso, demonstrando a efic\u00e1cia da infraestrutura criada.</p>"}]}